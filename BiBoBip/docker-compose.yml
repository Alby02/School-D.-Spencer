
services:
    mosquitto-local:
        image: eclipse-mosquitto:latest
        container_name: mqtt-local-${ID}
        expose:
            - "8883"
        networks:
            - mqtt-local-network
        volumes:
            - ./mosquitto/data:/mosquitto/data
            - ./mosquitto/log:/mosquitto/log
            - ./mosquitto/conf:/mosquitto/config
            - ./certs/server.crt:/certs/server.crt
            - ./certs/server.key:/certs/server.key
            - ./certs/ca.crt:/certs/ca.crt

    postgres-local:
        image: postgres:latest
        container_name: postgres-local-${ID}
        environment:
            - POSTGRES_DB=${POSTGRES_DB_LOCAL}
            - POSTGRES_USER=${POSTGRES_USER_LOCAL}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_LOCAL}
        volumes:
            - ./postgres/local/data:/var/lib/postgresql/data
        expose:
            - "5432"
        networks:
            - postgres-local-network
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U user" ]
            interval: 5s
            timeout: 3s
            retries: 5

    pgadmin-local: # pgAdmin4 for testing purposes only (not for production)
        image: dpage/pgadmin4:latest
        container_name: pgadmin-local-${ID}
        environment:
            - PGADMIN_DEFAULT_EMAIL=sas@sas.sas
            - PGADMIN_DEFAULT_PASSWORD=sas
        ports:
            - "5088:80"
        networks:
            - postgres-local-network

    manager-local:
        image: manager:latest
        container_name: manager-local-${ID}
        build:
            context: manager
            dockerfile: manager/Dockerfile
        environment:
            - POSTGRES_DB=${POSTGRES_DB_LOCAL}
            - POSTGRES_USER=${POSTGRES_USER_LOCAL}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_LOCAL}
            - POSTGRES_URL=${POSTGRES_URL_LOCAL}
            - MQTT_URL=${MQTT_URL_LOCAL}
        volumes:
            - ./certs/manager/client.p12:/app/certs/client.p12
            - ./certs/ca.crt:/app/certs/ca.crt
        networks:
            - mqtt-local-network
            - postgres-local-network
        depends_on:
            mosquitto-local:
                condition: service_started
            postgres-local:
                condition: service_healthy

    assistance-local:
        image: assistance:latest
        container_name: assistance-local-${ID}
        build:
            context: assistance
            dockerfile: assistance/Dockerfile
        environment:
            - POSTGRES_DB=${POSTGRES_DB_LOCAL}
            - POSTGRES_USER=${POSTGRES_USER_LOCAL}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_LOCAL}
            - POSTGRES_URL=${POSTGRES_URL_LOCAL}
            - MQTT_URL_LOCAL=${MQTT_URL_LOCAL}
            - MQTT_URL_REMOTE=${MQTT_URL_REMOTE}
            - ID_MACCHINA=${ID}
        volumes:
            - ./certs/assistance/client.p12:/app/certs/client.p12 # client.p12 is the certificate for the local broker
            - ./certs/remote.p12:/app/certs/remote.p12 # remote.p12 is the certificate for the remote broker
            - ./certs/ca.crt:/app/certs/ca.crt
        networks:
            - mqtt-local-network
            - postgres-local-network
        depends_on:
            mosquitto-local:
                condition: service_started
            postgres-local:
                condition: service_healthy

    bank-local:
        image: bank:latest
        container_name: bank-local-${ID}
        build:
            context: bank
            dockerfile: bank/Dockerfile
        stdin_open: true
        tty: true
        environment:
            - POSTGRES_DB=${POSTGRES_DB_LOCAL}
            - POSTGRES_USER=${POSTGRES_USER_LOCAL}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_LOCAL}
            - POSTGRES_URL=${POSTGRES_URL_LOCAL}
            - MQTT_URL=${MQTT_URL_LOCAL}
        volumes:
            - ./certs/bank/client.p12:/app/certs/client.p12
            - ./certs/ca.crt:/app/certs/ca.crt
        networks:
            - mqtt-local-network
            - postgres-local-network
        depends_on:
            mosquitto-local:
                condition: service_started
            postgres-local:
                condition: service_healthy

    issuer-local:
        image: issuer:latest
        container_name: issuer-local-${ID}
        build:
            context: issuer
            dockerfile: issuer/Dockerfile
        environment:
            - POSTGRES_DB=${POSTGRES_DB_LOCAL}
            - POSTGRES_USER=${POSTGRES_USER_LOCAL}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_LOCAL}
            - POSTGRES_URL=${POSTGRES_URL_LOCAL}
            - MQTT_URL=${MQTT_URL_LOCAL}
        volumes:
            - ./certs/issuer/client.p12:/app/certs/client.p12
            - ./certs/ca.crt:/app/certs/ca.crt
        networks:
            - mqtt-local-network
            - postgres-local-network
        depends_on:
            mosquitto-local:
                condition: service_started
            postgres-local:
                condition: service_healthy

    keypad-local:
        image: keypad:latest
        container_name: keypad-local-${ID}
        build:
            context: keypad
            dockerfile: keypad/Dockerfile
        stdin_open: true
        tty: true
        environment:
            - POSTGRES_DB=${POSTGRES_DB_LOCAL}
            - POSTGRES_USER=${POSTGRES_USER_LOCAL}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_LOCAL}
            - POSTGRES_URL=${POSTGRES_URL_LOCAL}
            - MQTT_URL=${MQTT_URL_LOCAL}
        volumes:
            - ./certs/keypad/client.p12:/app/certs/client.p12
            - ./certs/ca.crt:/app/certs/ca.crt
        networks:
            - mqtt-local-network
            - postgres-local-network
        depends_on:
            mosquitto-local:
                condition: service_started
            postgres-local:
                condition: service_healthy

networks:
    mqtt-local-network:
        driver: bridge
    postgres-local-network:
        driver: bridge